/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Parking;

import Business.Enterprise.Enterprise;
import Business.Enterprise.ParkingEnterprise;
import Business.Organization.ParkingOfficerOrganization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.ParseException;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author RishikRaavi
 */
public class ManagePerson extends javax.swing.JPanel {

    /**
     * Creates new form ManagePerson
     */
    JPanel userProcessContainer;
    UserAccount account;
    ParkingOfficerOrganization parkingOfficerOrganization;
    ParkingEnterprise enterprise;

    public ManagePerson(JPanel userProcessContainer, UserAccount account, ParkingOfficerOrganization parkingOfficerOrganization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.parkingOfficerOrganization = parkingOfficerOrganization;
        this.enterprise = (ParkingEnterprise) enterprise;
        this.account = account;
        typeOfParkingCombo.removeAllItems();
        typeOfParkingCombo.addItem("Residential");
        typeOfParkingCombo.addItem("Public");
        
        vehcileTypecombo.removeAllItems();
        vehcileTypecombo.addItem("4 Wheeler");
        vehcileTypecombo.addItem("2 Wheeler");

        populateArea();
        populateTable();
        populateSlot1();

    }

    public void populateSlot1() {

    }

    public void populateArea() {
        areaJCombo.removeAllItems();
        areaJCombo.addItem("Roxbury");
        areaJCombo.addItem("Huntington Ave");
        areaJCombo.addItem("Fenway");
        areaJCombo.addItem("Lowel");

    }

    public void populateAddress() {
        addressJCombo.removeAllItems();
        if (areaJCombo.getSelectedItem().equals("Roxbury")) {
            addressJCombo.addItem("72 Hammond Street");

        }
        if (areaJCombo.getSelectedItem().equals("Huntington Ave")) {
            addressJCombo.addItem("878 Huntington Avenue");
        }
        if (areaJCombo.getSelectedItem().equals("Fenway")) {
            addressJCombo.addItem("Fenway Parking Lot");
        }
        if (areaJCombo.getSelectedItem().equals("Lowel")) {
            addressJCombo.addItem("Lowel Parking Lot");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        typeOfParkingCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        vehcileNumberJText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ssnJText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        vehcileTypecombo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        zipCode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        phoneNumberJText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addressJCombo = new javax.swing.JComboBox();
        areaJCombo = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setText("Manage Person");

        jLabel7.setText("First Name");

        jLabel11.setText("Last Name");

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Person Id", "Name", "Vehcile Number", "Area", "typeOfParking"
            }
        ));
        jScrollPane1.setViewportView(personTable);

        jLabel3.setText("Type Of Parking");

        typeOfParkingCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("SSN");

        jLabel5.setText("Phone Number");

        jLabel6.setText("Vehcile Number");

        jLabel8.setText("Vehcile Type");

        vehcileTypecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("ZipCode");

        jLabel10.setText("Person Details:");

        jLabel13.setText("Area");

        jLabel14.setText("Vehicile Details:");

        jButton1.setText("Submit Person Record");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Address");

        addressJCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addressJCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressJComboActionPerformed(evt);
            }
        });

        areaJCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        areaJCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaJComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel1))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ssnJText, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                    .addComponent(phoneNumberJText)
                                    .addComponent(lastName)
                                    .addComponent(firstName)
                                    .addComponent(zipCode)
                                    .addComponent(addressJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(areaJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(vehcileNumberJText, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vehcileTypecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(typeOfParkingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(vehcileNumberJText)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(vehcileTypecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ssnJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(typeOfParkingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(phoneNumberJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(areaJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addressJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(88, 88, 88))
        );
    }// </editor-fold>//GEN-END:initComponents
public boolean Alphabet(String name) {
        char[] chars = name.toCharArray();

        for (char c : chars) {
            if (Character.isLetter(c)) {
                return true;
            }
        }
        return false;
    }

    private boolean isInt(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    private boolean isLong(String s) {
        try {
            Long.parseLong(s);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String personFirstName = firstName.getText();
        String personLastName = lastName.getText();
        String ssn = ssnJText.getText();
        String phoneNumber = phoneNumberJText.getText();
        String typeOfParking = typeOfParkingCombo.getSelectedItem().toString();
        String vehcileNumber = vehcileNumberJText.getText();
        String vehcileType = vehcileTypecombo.getSelectedItem().toString();
        String zip = zipCode.getText();
      
        String area = areaJCombo.getSelectedItem().toString();
        String address = addressJCombo.getSelectedItem().toString();
        if (personFirstName == null || personFirstName.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "First Name cannot be blank");
            return;
        } else if (!Alphabet(personFirstName)) {
            JOptionPane.showMessageDialog(null, "Please Enter First Name in Alphabets ");
            return;
        }
        if (personLastName == null || personLastName.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Last Name cannot be blank");
            return;
        } else if (!Alphabet(personLastName)) {
            JOptionPane.showMessageDialog(null, "Please Enter Last Name in Alphabets ");
            return;
        } 
        //SSN Validation
        else if (ssn == null || ssn.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "SSN cannot be blank");
            return;
        } else if (!isInt(ssn)) {
            JOptionPane.showMessageDialog(null, "Fileds should contain only numbers");
            return;
        } else if (Integer.parseInt(String.valueOf(ssn)) <= 0) {
            JOptionPane.showMessageDialog(null, "Please Enter Positive SSN Value");
            return;
        } else if( ssn.length() > 4) {
            JOptionPane.showMessageDialog(null, "Please Enter Last 4Digits of SSN");
            return;
        }
        //phone Validation
        else if (phoneNumber == null || phoneNumber.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "phone number cannot be blank");
            return;
        } else if (!isLong(phoneNumber)) {
            JOptionPane.showMessageDialog(null, "Fileds should contain only numbers");
            return;
        } else if (Long.parseLong(String.valueOf(phoneNumber)) <= 0) {
            JOptionPane.showMessageDialog(null, "Please Enter Positive phone Value");
            return;
        } else if (phoneNumber.length() > 10) {
            JOptionPane.showMessageDialog(null, "Please Enter 10 Digits Phone Number");
            return;
        }
        
        //Vehcile Validation
        else if (vehcileNumber == null || vehcileNumber.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Vehcile Number Cannot Be Empty");
            return;
        }
        //Zip Validation
        else if (zip == null || zip.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Zip cannot be blank");
            return;
        } else if (!isInt(zip)) {
            JOptionPane.showMessageDialog(null, "Fileds should contain only numbers");
            return;
        } else if (Integer.parseInt(String.valueOf(zip)) <= 0) {
            JOptionPane.showMessageDialog(null, "Please Enter Positive Zip Value");
            return;
        } else if (zip.length() > 6) {
            JOptionPane.showMessageDialog(null, "Please Enter Last 4Digits of Zip");
            return;
        }
        else{  
        
       
        Person p = enterprise.getPersonList().createPerson(personFirstName, typeOfParking, Integer.parseInt(ssn), personLastName, vehcileNumber, vehcileType, zip, area, address,Long.parseLong(phoneNumber));

       
        populateTable();
        JOptionPane.showMessageDialog(null, "Person was added successfully");

        }  //  String patientEmerLevel = EmergencyLeveljComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) personTable.getModel();
        model.setRowCount(0);
        if (enterprise.getPersonList().getPersonList() != null) {
            for (Person p : enterprise.getPersonList().getPersonList()) {

                Object row[] = new Object[5];
                row[0] = p;
                row[1] = p.getPersonFirstName() + p.getPersonLastName();
                row[2] = p.getVehcileNumber();
                row[3] = p.getArea();
                row[4] = p.getTypeOfParking();
            personTable.getColumnModel().getColumn(0).setMinWidth(0);
            personTable.getColumnModel().getColumn(0).setMaxWidth(0);
            personTable.getColumnModel().getColumn(0).setWidth(0);

                ((DefaultTableModel) personTable.getModel()).addRow(row);
            }
        }

    }
    private void areaJComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaJComboActionPerformed
        // TODO add your handling code here:
        if (areaJCombo.getSelectedItem() != null) {
            populateAddress();

        }

    }//GEN-LAST:event_areaJComboActionPerformed

    private void addressJComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressJComboActionPerformed
        if (addressJCombo.getSelectedItem() != null) {

        }    // TODO add your handling code here:
    }//GEN-LAST:event_addressJComboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox addressJCombo;
    private javax.swing.JComboBox areaJCombo;
    private javax.swing.JTextField firstName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastName;
    private javax.swing.JTable personTable;
    private javax.swing.JTextField phoneNumberJText;
    private javax.swing.JTextField ssnJText;
    private javax.swing.JComboBox typeOfParkingCombo;
    private javax.swing.JTextField vehcileNumberJText;
    private javax.swing.JComboBox vehcileTypecombo;
    private javax.swing.JTextField zipCode;
    // End of variables declaration//GEN-END:variables
}
